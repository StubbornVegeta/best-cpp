
test:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <__cxa_atexit@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__cxa_atexit@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <__cxa_atexit@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    *0x2fda(%rip)        # 4020 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <_ZNSolsEPFRSoS_E@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    *0x2fd2(%rip)        # 4028 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__stack_chk_fail@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4030 <__stack_chk_fail@GLIBC_2.4>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <_ZNSt8ios_base4InitC1Ev@plt>:
    1070:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4038 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 26 02 00 00 	lea    0x226(%rip),%r8        # 12c0 <__libc_csu_fini>
    109a:	48 8d 0d af 01 00 00 	lea    0x1af(%rip),%rcx        # 1250 <__libc_csu_init>
    10a1:	48 8d 3d d1 00 00 00 	lea    0xd1(%rip),%rdi        # 1179 <main>
    10a8:	ff 15 32 2f 00 00    	call   *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 99 2f 00 00 	lea    0x2f99(%rip),%rdi        # 4050 <__TMC_END__>
    10b7:	48 8d 05 92 2f 00 00 	lea    0x2f92(%rip),%rax        # 4050 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4050 <__TMC_END__>
    10e7:	48 8d 35 62 2f 00 00 	lea    0x2f62(%rip),%rsi        # 4050 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d 65 30 00 00 00 	cmpb   $0x0,0x3065(%rip)        # 4190 <completed.0>
    112b:	75 33                	jne    1160 <__do_global_dtors_aux+0x40>
    112d:	55                   	push   %rbp
    112e:	48 83 3d 92 2e 00 00 	cmpq   $0x0,0x2e92(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0d                	je     1148 <__do_global_dtors_aux+0x28>
    113b:	48 8b 3d 06 2f 00 00 	mov    0x2f06(%rip),%rdi        # 4048 <__dso_handle>
    1142:	ff 15 80 2e 00 00    	call   *0x2e80(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1148:	e8 63 ff ff ff       	call   10b0 <deregister_tm_clones>
    114d:	c6 05 3c 30 00 00 01 	movb   $0x1,0x303c(%rip)        # 4190 <completed.0>
    1154:	5d                   	pop    %rbp
    1155:	c3                   	ret    
    1156:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    115d:	00 00 00 
    1160:	c3                   	ret    
    1161:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1168:	00 00 00 00 
    116c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001170 <frame_dummy>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	e9 67 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001179 <main>:
#include <iostream>

int main()
{
    1179:	55                   	push   %rbp
    117a:	48 89 e5             	mov    %rsp,%rbp
    117d:	48 83 ec 10          	sub    $0x10,%rsp
    1181:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1188:	00 00 
    118a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    118e:	31 c0                	xor    %eax,%eax
    char name[] = "Cherno";
    1190:	c7 45 f1 43 68 65 72 	movl   $0x72656843,-0xf(%rbp)
    1197:	66 c7 45 f5 6e 6f    	movw   $0x6f6e,-0xb(%rbp)
    119d:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    std::cout << name << std::endl;
    11a1:	48 8d 45 f1          	lea    -0xf(%rbp),%rax
    11a5:	48 89 c6             	mov    %rax,%rsi
    11a8:	48 8d 3d d1 2e 00 00 	lea    0x2ed1(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    11af:	e8 8c fe ff ff       	call   1040 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    11b4:	48 89 c2             	mov    %rax,%rdx
    11b7:	48 8b 05 12 2e 00 00 	mov    0x2e12(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    11be:	48 89 c6             	mov    %rax,%rsi
    11c1:	48 89 d7             	mov    %rdx,%rdi
    11c4:	e8 87 fe ff ff       	call   1050 <_ZNSolsEPFRSoS_E@plt>
    return 0;
    11c9:	b8 00 00 00 00       	mov    $0x0,%eax
}
    11ce:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    11d2:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    11d9:	00 00 
    11db:	74 05                	je     11e2 <main+0x69>
    11dd:	e8 7e fe ff ff       	call   1060 <__stack_chk_fail@plt>
    11e2:	c9                   	leave  
    11e3:	c3                   	ret    

00000000000011e4 <_Z41__static_initialization_and_destruction_0ii>:
    11e4:	55                   	push   %rbp
    11e5:	48 89 e5             	mov    %rsp,%rbp
    11e8:	48 83 ec 10          	sub    $0x10,%rsp
    11ec:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11ef:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11f2:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    11f6:	75 32                	jne    122a <_Z41__static_initialization_and_destruction_0ii+0x46>
    11f8:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    11ff:	75 29                	jne    122a <_Z41__static_initialization_and_destruction_0ii+0x46>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    1201:	48 8d 3d 89 2f 00 00 	lea    0x2f89(%rip),%rdi        # 4191 <_ZStL8__ioinit>
    1208:	e8 63 fe ff ff       	call   1070 <_ZNSt8ios_base4InitC1Ev@plt>
    120d:	48 8d 15 34 2e 00 00 	lea    0x2e34(%rip),%rdx        # 4048 <__dso_handle>
    1214:	48 8d 35 76 2f 00 00 	lea    0x2f76(%rip),%rsi        # 4191 <_ZStL8__ioinit>
    121b:	48 8b 05 d6 2d 00 00 	mov    0x2dd6(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    1222:	48 89 c7             	mov    %rax,%rdi
    1225:	e8 06 fe ff ff       	call   1030 <__cxa_atexit@plt>
    122a:	90                   	nop
    122b:	c9                   	leave  
    122c:	c3                   	ret    

000000000000122d <_GLOBAL__sub_I_main>:
    122d:	55                   	push   %rbp
    122e:	48 89 e5             	mov    %rsp,%rbp
    1231:	be ff ff 00 00       	mov    $0xffff,%esi
    1236:	bf 01 00 00 00       	mov    $0x1,%edi
    123b:	e8 a4 ff ff ff       	call   11e4 <_Z41__static_initialization_and_destruction_0ii>
    1240:	5d                   	pop    %rbp
    1241:	c3                   	ret    
    1242:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1249:	00 00 00 
    124c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001250 <__libc_csu_init>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	41 57                	push   %r15
    1256:	4c 8d 3d 43 2b 00 00 	lea    0x2b43(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    125d:	41 56                	push   %r14
    125f:	49 89 d6             	mov    %rdx,%r14
    1262:	41 55                	push   %r13
    1264:	49 89 f5             	mov    %rsi,%r13
    1267:	41 54                	push   %r12
    1269:	41 89 fc             	mov    %edi,%r12d
    126c:	55                   	push   %rbp
    126d:	48 8d 2d 3c 2b 00 00 	lea    0x2b3c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1274:	53                   	push   %rbx
    1275:	4c 29 fd             	sub    %r15,%rbp
    1278:	48 83 ec 08          	sub    $0x8,%rsp
    127c:	e8 7f fd ff ff       	call   1000 <_init>
    1281:	48 c1 fd 03          	sar    $0x3,%rbp
    1285:	74 1f                	je     12a6 <__libc_csu_init+0x56>
    1287:	31 db                	xor    %ebx,%ebx
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1290:	4c 89 f2             	mov    %r14,%rdx
    1293:	4c 89 ee             	mov    %r13,%rsi
    1296:	44 89 e7             	mov    %r12d,%edi
    1299:	41 ff 14 df          	call   *(%r15,%rbx,8)
    129d:	48 83 c3 01          	add    $0x1,%rbx
    12a1:	48 39 dd             	cmp    %rbx,%rbp
    12a4:	75 ea                	jne    1290 <__libc_csu_init+0x40>
    12a6:	48 83 c4 08          	add    $0x8,%rsp
    12aa:	5b                   	pop    %rbx
    12ab:	5d                   	pop    %rbp
    12ac:	41 5c                	pop    %r12
    12ae:	41 5d                	pop    %r13
    12b0:	41 5e                	pop    %r14
    12b2:	41 5f                	pop    %r15
    12b4:	c3                   	ret    
    12b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    12bc:	00 00 00 00 

00000000000012c0 <__libc_csu_fini>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	c3                   	ret    

Disassembly of section .fini:

00000000000012c8 <_fini>:
    12c8:	f3 0f 1e fa          	endbr64 
    12cc:	48 83 ec 08          	sub    $0x8,%rsp
    12d0:	48 83 c4 08          	add    $0x8,%rsp
    12d4:	c3                   	ret    
